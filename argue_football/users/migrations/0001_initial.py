# Generated by Django 4.2.4 on 2023-09-16 14:13

import argue_football.users.manager
import argue_football.utilities.utils
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("posts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                (
                    "id",
                    models.CharField(
                        default=argue_football.utilities.utils.generate_id,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255, verbose_name="Name of User")),
                ("email", models.CharField(db_index=True, max_length=225, unique=True, verbose_name="Email")),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=10,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be 10 digits only", regex="^\\d{10}$"
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date Of Birth")),
                ("isverify", models.BooleanField(default=False, verbose_name="IsVerify")),
                ("otp", models.CharField(blank=True, db_index=True, max_length=4, null=True, verbose_name="OTP")),
                ("otp_expire", models.DateTimeField(blank=True, db_index=True, null=True, verbose_name="Otp Expire")),
                (
                    "otp_max_try",
                    models.CharField(
                        blank=True, db_index=True, default=3, max_length=2, null=True, verbose_name="OTP Max Try"
                    ),
                ),
                (
                    "otp_max_out",
                    models.DateTimeField(blank=True, db_index=True, null=True, verbose_name="Otp Time Out"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("is_active", models.BooleanField(default=True, verbose_name="is_active")),
                ("is_staff", models.BooleanField(default=False, verbose_name="is_staff")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("object", argue_football.users.manager.UserManager()),
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=argue_football.utilities.utils.generate_id,
                        editable=False,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("active", models.BooleanField(db_index=True, default=True, verbose_name="active")),
                (
                    "first_name",
                    models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name="Last Name"),
                ),
                ("extradata", models.JSONField(blank=True, default=dict, null=True, verbose_name="extradata")),
                ("metadata", models.JSONField(blank=True, default=dict, null=True, verbose_name="metaadata")),
                ("settings", models.JSONField(blank=True, default=dict, null=True, verbose_name="settings")),
                ("isverified", models.BooleanField(blank=True, default=False, null=True, verbose_name="IsVerify")),
                (
                    "club_interests",
                    models.ManyToManyField(blank=True, related_name="clubs_interest", to="posts.clubinterest"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
    ]
